// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/tenkoh/exsql/ent/document"
	"github.com/tenkoh/exsql/ent/post"
	"github.com/tenkoh/exsql/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	documentFields := schema.Document{}.Fields()
	_ = documentFields
	// documentDescCreatedAt is the schema descriptor for created_at field.
	documentDescCreatedAt := documentFields[1].Descriptor()
	// document.DefaultCreatedAt holds the default value on creation for the created_at field.
	document.DefaultCreatedAt = documentDescCreatedAt.Default.(func() time.Time)
	// documentDescUpdatedAt is the schema descriptor for updated_at field.
	documentDescUpdatedAt := documentFields[2].Descriptor()
	// document.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	document.DefaultUpdatedAt = documentDescUpdatedAt.Default.(func() time.Time)
	postFields := schema.Post{}.Fields()
	_ = postFields
	// postDescCreatedAt is the schema descriptor for created_at field.
	postDescCreatedAt := postFields[3].Descriptor()
	// post.DefaultCreatedAt holds the default value on creation for the created_at field.
	post.DefaultCreatedAt = postDescCreatedAt.Default.(func() time.Time)
	// postDescUpdatedAt is the schema descriptor for updated_at field.
	postDescUpdatedAt := postFields[4].Descriptor()
	// post.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	post.DefaultUpdatedAt = postDescUpdatedAt.Default.(func() time.Time)
}
